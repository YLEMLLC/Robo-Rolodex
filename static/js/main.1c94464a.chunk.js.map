{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchBox/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robo","id","alt","name","company","catchPhrase","CardList","robos","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","data","setState","this","filterRobos","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,aAAoDC,IAAI,KAChE,6BAAKL,EAAMG,KAAKG,OAChB,4BAAIN,EAAMG,KAAKI,QAAQC,mBCJhBC,EAAW,SAACT,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMU,MAAMC,KAAI,SAACR,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCLXQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCJKG,G,wDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,MAAO,GACPS,YAAa,IAJH,E,gEAOO,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAAIC,OAAOF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEf,MAAOc,Y,+BAG3C,IAAD,SACwBE,KAAKR,MAA5BR,EADD,EACCA,MAAOS,EADR,EACQA,YACTQ,EAAcjB,EAAMkB,QAAO,SAACzB,GAAD,OAC/BA,EAAKG,KAAKuB,cAAcC,SAASX,EAAYU,kBAG/C,OACE,sBAAK5B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEY,YAAY,cACZC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUvB,MAAOiB,W,GA1BQO,cCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.1c94464a.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => {\n  return (\n    <div className='card-container'>\n      <img src={`https://robohash.org/${props.robo.id}?set=set1`} alt='' />\n      <h2>{props.robo.name}</h2>\n      <p>{props.robo.company.catchPhrase}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport './card-list.styles.css'\nimport { Card } from '../card/card.component'\n\nexport const CardList = (props) => {\n  return (\n    <div className='card-list'>\n      {props.robos.map((robo) => (\n        <Card key={robo.id} robo={robo} />\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className='search'\n      type='search'\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport { SearchBox } from './components/searchBox/search-box.component.jsx'\nimport './App.css'\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robos: [],\n      searchField: '',\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then((res) =>\n      res.json().then((data) => this.setState({ robos: data }))\n    )\n  }\n  render() {\n    const { robos, searchField } = this.state\n    const filterRobos = robos.filter((robo) =>\n      robo.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className='App'>\n        <h1>ROBO ROLODEX</h1>\n        <SearchBox\n          placeholder='ROBO SEARCH'\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList robos={filterRobos} />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}